package days14;

/**
 * @author kenik  
 * @date 2025. 9. 4. 오전 10:23:49 
 * @subject   
 * @content 
 */ 
public class Ex03 {

	public static void main(String[] args) {
		/*
		 * 1. 객체 지향 프로그래밍( Object Oriented Programming )  OOP
		 *   예) 조립컴퓨터 = 부품 + 부품 + 부품 + 부품 + ...
		 *                              조립
		 *                              
		 *      소프트웨어  = 객체 + 객체 + 객체 + 객체(차트) + 객체 +   
		 *      애플케이션                            
		 *      생산성 향상..
		 *      유지/보수 용이
		 * 2. 클래스 ?  객체의 설계도    
		 * 3. 객체 ( Object ) ? 클래스(설계도)로 실제 존재하는 것.
		 *    ( 유형-자동차,자전거,책, 무형-학과,강의,주문 등등 )
		 * 4. 객체 = 속성(특징) + 기능(동작,일)  구성.
		 *    자바 = 필드        메서드    
		 * 5. 객체 모델링(Object Modeling) ? 현실세계의 객체를 소프트웨어 객체로
		 * 설계하는 것(과정).
		 * 6. OOP( 클래스 )의  특징
		 *   1) 캡슐화 - 객체의 필드,메서드의 실제 구현 내용을 외부에 감추는 것.
		 *     (은닉화)   제한자( Modifier ) == 접근지정자 + 기타제어자
		 *                                   접근제한자
		 *                                   public , private 
		 *   2) 상속성 - 부모객체의 필드, 메서드를 자식 객체에 물려주는 것.
		 *         ㄴ 코드의 재사용 
		 *         ㄴ 유지 보수 용이(최소화) 
		 *   3) 다형성 *** 
		 *   4) 추상화    
		 * 
		 * 7. 클래스, 객체, 인스턴스 설명.
		 *    - 인스턴스 ? 클래스로부터 생성된 객체를 인스턴스라고 한다.
		 *    현재 까지는 제가 설명을 했지만은 구분 X
		 *
		 *    저는 해당 클래스 타입을 가지고 있는 변수를 객체, 
		 *    그 객체에 주소값이 할당된것이 인스턴스 이렇게 알고 있었습니다
		 *    
		 *    
		 * 8. 인스턴스화 ? 클래스로부터 객체를 만드는 과정  
		 * 9. 객체의 구성요소(==멤버)
		 *    1) 속성==특징   ==  필드 == 멤버변수
		 *    2) 기능==일(동작)== 메서드== 멤버함수
		 *    
		 * 10. 클래스 설계하는 과정 
		 *    1) 객체의 구성요소( 속성, 기능 ) 파악 -> 목록 작성
		 *    2) 객체 모델링 - 필드, 메서드
		 *    3) 클래스 선언
		 *     [접] + [기] class 클래스명 [extends 부모클래스] [implements 인터페이스...]{
		 *      제한자
		 *          // 필드 선언
		 *          // 메서드 선언
		 *     } 
		 *   4) 객체 생성 - 테스트
		 *   5) 문제점 파악 - 유지, 보수 
		 *   6) 상용화
		 *   7) 기능추가, 확장 + 유지,보수 -> 버전 관리
		 *   
		 *  예) 신형 자동차  클래스 설계
		 *    1) 객체의 구성요소( 속성, 기능 ) 파악 -> 목록 작성
		 *    2) 클래스 선언
		 *    :  
		 * */

	}

}
